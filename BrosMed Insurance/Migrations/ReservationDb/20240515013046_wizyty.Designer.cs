// <auto-generated />
using System;
using BrosMed_Insurance.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BrosMed_Insurance.Migrations.ReservationDb
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20240515013046_wizyty")]
    partial class wizyty
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BrosMed_Insurance.Models.Reservation.Finalizacja", b =>
                {
                    b.Property<int>("FinalizacjaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinalizacjaId"));

                    b.Property<int>("TerminyId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FinalizacjaId");

                    b.HasIndex("TerminyId");

                    b.ToTable("Finalizacja");
                });

            modelBuilder.Entity("BrosMed_Insurance.Models.Reservation.Godzina", b =>
                {
                    b.Property<int>("GodzinaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GodzinaId"));

                    b.Property<string>("godzinaVM")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GodzinaId");

                    b.ToTable("Godziny");
                });

            modelBuilder.Entity("BrosMed_Insurance.Models.Reservation.Terminy", b =>
                {
                    b.Property<int>("TerminyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TerminyId"));

                    b.Property<DateOnly>("Data")
                        .HasColumnType("date");

                    b.Property<int>("GodzinaId")
                        .HasColumnType("int");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.HasKey("TerminyId");

                    b.HasIndex("GodzinaId");

                    b.HasIndex("UslugaId");

                    b.ToTable("Terminy");
                });

            modelBuilder.Entity("BrosMed_Insurance.Models.Reservation.Usluga", b =>
                {
                    b.Property<int>("UslugaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UslugaId"));

                    b.Property<string>("Cena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UslugaId");

                    b.ToTable("Usluga");
                });

            modelBuilder.Entity("BrosMed_Insurance.Models.Reservation.Finalizacja", b =>
                {
                    b.HasOne("BrosMed_Insurance.Models.Reservation.Terminy", "Terminy")
                        .WithMany()
                        .HasForeignKey("TerminyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Terminy");
                });

            modelBuilder.Entity("BrosMed_Insurance.Models.Reservation.Terminy", b =>
                {
                    b.HasOne("BrosMed_Insurance.Models.Reservation.Godzina", "Godzina")
                        .WithMany()
                        .HasForeignKey("GodzinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BrosMed_Insurance.Models.Reservation.Usluga", "Usluga")
                        .WithMany()
                        .HasForeignKey("UslugaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Godzina");

                    b.Navigation("Usluga");
                });
#pragma warning restore 612, 618
        }
    }
}
